<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- Define appenders -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n</pattern>
        </encoder>
        <!-- Filter to exclude health check endpoints -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>
                    return message.contains("/actuator/health") ||
                           message.contains("health/readiness") ||
                           message.contains("health/liveness") ||
                           (logger.contains("org.springframework.web.servlet.DispatcherServlet") &amp;&amp; 
                            message.contains("GET \"/actuator/health"));
                </expression>
            </evaluator>
            <onMismatch>NEUTRAL</onMismatch>
            <onMatch>DENY</onMatch>
        </filter>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/test-spring-boot-app.log</file>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/test-spring-boot-app.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- Filter to exclude health check endpoints -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>
                    return message.contains("/actuator/health") ||
                           message.contains("health/readiness") ||
                           message.contains("health/liveness") ||
                           (logger.contains("org.springframework.web.servlet.DispatcherServlet") &amp;&amp; 
                            message.contains("GET \"/actuator/health"));
                </expression>
            </evaluator>
            <onMismatch>NEUTRAL</onMismatch>
            <onMatch>DENY</onMatch>
        </filter>
    </appender>

    <!-- Profile-specific configurations -->
    <springProfile name="!production">
        <logger name="com.k8sloverskorea.testspringbootapp" level="DEBUG"/>
        <logger name="org.springframework.web" level="DEBUG"/>
        <logger name="org.hibernate.SQL" level="DEBUG"/>
    </springProfile>

    <springProfile name="production">
        <logger name="com.k8sloverskorea.testspringbootapp" level="INFO"/>
        <logger name="org.springframework.web" level="INFO"/>
        <logger name="org.hibernate.SQL" level="WARN"/>
        <!-- Suppress health check related logs -->
        <logger name="org.springframework.boot.actuator.endpoint.web.servlet" level="WARN"/>
        <logger name="org.springframework.boot.actuator.health" level="WARN"/>
        <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" level="WARN"/>
        <logger name="org.springframework.web.servlet.DispatcherServlet" level="WARN"/>
        <!-- Suppress scheduled logging service logs -->
        <logger name="com.k8sloverskorea.testspringbootapp.service.LoggingService" level="WARN"/>
    </springProfile>

    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>